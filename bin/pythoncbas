#!/bin/bash

### FUNCTIONS ###
create_environment() {
    python3.11 -m venv pythoncbas_env
    # Activate the virtual environment
    source pythoncbas_env/bin/activate
    # Install dependencies
    pip install -r requirements.txt
    # Deactivate the virtual environment
    deactivate
}

reset_app() {
    echo "Resetting the application..."
    git reset --hard
    git clean -df
    git pull
    create_environment
}

delete_app() {
    # Prompt user for confirmation
    read -p "Are you sure you want to delete the application? (Your projects will not be deleted) [y/n] " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Deletion aborted."
        exit 1
    fi
    echo "Deleting the application..."
    cd ..
    rm -rf PythonCBAS
    echo "Application deleted."
    exit 0
}

normal_start() {
    echo 'Checking for updates...'
    git pull
}

print_usage() {
    echo "Usage: ./start_pythoncbas.sh [-r] [-d]"
    echo "Options:"
    echo "  -r: Reset the application to its initial state."
    echo "  -d: Delete the application."
}


# If PythonCBAS directory does not exist, abort
if [ ! -d ~/PythonCBAS ]; then
    read -p "PythonCBAS directory not found. Would you like to install the application? [y/n] " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Installation aborted."
        exit 1
    else
        cd ~
        echo "Cloning the repository..."
        git clone https://github.com/danielhsu021202/PythonCBAS.git PythonCBAS
        cd PythonCBAS
        create_environment
    fi
    exit 1
fi

# cd home directory + PythonCBAS directory
cd ~
cd PythonCBAS

reset_flag=false
delete_flag=false

while getopts ":rd" option; do
    case "${option}" in
        r)
            reset_flag=true
            ;;
        d)
            delete_flag=true
            ;;
        *)
            print_usage
            exit 1
            ;;
    esac
done


# Execute actions based on flags

if $reset_flag; then
    reset_app
fi

if $delete_flag; then
    delete_app
fi

if ! $reset_flag && ! $delete_flag; then
    normal_start
fi

echo 'Updating dependencies...'
pip install -r requirements.txt > /dev/null 2>&1
echo 'Done! Starting PythonCBAS...'
source pythoncbas_env/bin/activate
python3.11 src/PythonCBAS.py
